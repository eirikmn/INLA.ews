% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpfulfunctions.R
\name{forcingmaker}
\alias{forcingmaker}
\title{Simulate inferred forced response}
\usage{
forcingmaker(
  object,
  quick = FALSE,
  seed = 1234,
  intercept = 0,
  print.progress = FALSE
)
}
\arguments{
\item{object}{S3 object of type \code{inla.ews} which includes result from 
\code{inla}-program.}

\item{quick}{Boolean indicating whether or not the function should run without
storing simulations (faster, and less memory). If quantiles are desired this must
be set to \code{FALSE}.}

\item{seed}{Seed used for the random number generator.}

\item{intercept}{Intercept to shift the forced response to best fit the data. 
If \code{length(intercept)==1} it will be assumed to be fixed. If \code{length(intercept)>1} 
samples will be generated by assuming first value represents mean and second value 
represents standard deviation.}

\item{print.progress}{boolean indicating if progress should be printed to screen.}
}
\value{
Returns the same S3 object of class \code{inla.ews} as included in the 
input arguments, but appends summary statistics \code{object\$forced}.
}
\description{
This function employs Monte Carlo simulations to estimate the forced response from 
the fitted model.
}
\examples{
\donttest{
set.seed(123)
n = 300
time=1:n
a = 0.5
b = 0.35/n
phis = a+b*time
F0 = -3
sigmaf=0.7
sigma = 1.2

s = ar1_timedep_sim(n,phis=phis)
forcing = arima.sim(model=list(ar=c(0.95)),n=n,sd=sqrt(1-0.95^2))+1:n/n*5
muvek = mu.computer(forcing,sigmaf,F0,memory=phis,model="ar1")
data = s + muvek
object = inla.ews(data,forcing,model="ar1",memory.true=phis)

object = forcingmaker(object,quick=FALSE,print.progress=TRUE,
                    intercept=object$.args$intercept)
summary(object)
plot(object)


}
}
\seealso{
\code{\link{inla.ews}, \link{mu.computer}}
}
\author{
Eirik Myrvoll-Nilsen, \email{eirikmn91@gmail.com}
}
\keyword{forcing}
\keyword{mean}
\keyword{response}
